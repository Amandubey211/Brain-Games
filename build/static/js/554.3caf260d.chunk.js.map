{"version":3,"file":"static/js/554.3caf260d.chunk.js","mappings":"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","sources":["Components/ContactComponents/ContactForm.js","Pages/Contact.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { FcInvite } from \"react-icons/fc\";\r\nimport \"../../Pages/Styles/Contact.css\";\r\nimport { useState } from \"react\";\r\nimport { HomeLoadingContext } from \"../../Context/HomeLoadingContextProvider\";\r\n\r\nconst ContactForm = () => {\r\n  const [Name, Setname] = useState(\"\");\r\n  const [Email, Setemail] = useState(\"\");\r\n  const [Message, Setmessage] = useState(\"\");\r\n  const { SetHomeLoading } = useContext(HomeLoadingContext);\r\n\r\n  const submitForm = async (e) => {\r\n    e.preventDefault();\r\n    SetHomeLoading(true);\r\n    try {\r\n      // const { data } = await axios.post(\"/api/contact\", {\r\n      //   Name,\r\n      //   Email,\r\n      //   Message,\r\n      // });\r\n      if (true) {\r\n        setTimeout(() => {\r\n          SetHomeLoading(false);\r\n        }, 2450);\r\n\r\n        toast.success(\"Message Sended successfully\");\r\n        Setemail(\"\");\r\n        Setname(\"\");\r\n        Setmessage(\"\");\r\n      }\r\n    } catch (error) {\r\n      SetHomeLoading(false);\r\n\r\n      toast.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"p-4 \">\r\n          <form\r\n            className=\" form  border bg-light p-4 rounded-4 \"\r\n            style={{\r\n              boxShadow:\r\n                \"rgb(204, 219, 232) 3px 3px 6px 0px inset, rgba(255, 255, 255, 0.5) -3px -3px 6px 1px inset\",\r\n            }}\r\n            onSubmit={submitForm}\r\n          >\r\n            <div\r\n              className=\"mt-2  fw-semibold text-capitalize text-center d-flex  py-2 flex-row flex-wrap gap-2 justify-content-center  align-items-center rounded-2 bg-none \"\r\n              style={{\r\n                boxShadow:\r\n                  \"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\r\n              }}\r\n            >\r\n              <FcInvite className=\"fs-3  \" />\r\n              <h5 className=\"text-center fw-bold text-capitalize\">\r\n                {\" \"}\r\n                <b>\r\n                  {\" \"}\r\n                  <b className=\"vibrant fs-3\">M</b>essage box\r\n                </b>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"txt_field \">\r\n              <input\r\n                type=\"text\"\r\n                name=\"Name\"\r\n                maxLength={30}\r\n                value={Name}\r\n                onChange={(e) => Setname(e.target.value)}\r\n                required\r\n              />\r\n              <span></span>\r\n              <label> Name</label>\r\n            </div>\r\n            <div className=\"txt_field\">\r\n              <input\r\n                type=\"email\"\r\n                name=\"Email\"\r\n                value={Email}\r\n                onChange={(e) => Setemail(e.target.value)}\r\n                required\r\n              />\r\n              <span></span>\r\n              <label>Email</label>\r\n            </div>\r\n            <div className=\"txt_field\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"Message\"\r\n                maxLength={200}\r\n                value={Message}\r\n                onChange={(e) => Setmessage(e.target.value)}\r\n                required\r\n              />\r\n              <span></span>\r\n              <label>Message</label>\r\n            </div>\r\n            <div className=\"d-flex justify-content-start \">\r\n              <button className=\"button-52\" role=\"button\">\r\n                Send\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { useContext } from \"react\";\r\nimport Layout from \"../Layout/Layout\";\r\nimport Spinners from \"../Components/Spinner/Spinner\";\r\nimport ContactForm from \"../Components/ContactComponents/ContactForm\";\r\nimport { HomeLoadingContext } from \"../Context/HomeLoadingContextProvider\";\r\nimport SendingMessage from \"../Animation/SendingMessage.json\";\r\nconst Contact = () => {\r\n  const { homeloading, SetHomeLoading } = useContext(HomeLoadingContext);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-5 col-md-12 col-sm-12 \">\r\n          <div className=\"d-flex gap-3 justify-content-center  flex-column  p-3 align-items-center\">\r\n            <b>\r\n              {\" \"}\r\n              <b className=\"vibrant\">C</b>ontact Us\r\n            </b>\r\n            {homeloading ? (\r\n              <Spinners animationData={SendingMessage} height=\"300px\" />\r\n            ) : (\r\n              <img className=\"contactImage\" src=\"Contact2.svg\" />\r\n            )}\r\n\r\n            <b>\r\n              <b className=\"vibrant\">T</b>hanks for Your Precious{\" \"}\r\n              <b className=\"vibrant\">T</b>ime\r\n            </b>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-7 col-md-12 col-sm-12\">\r\n          <ContactForm />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["ContactForm","Name","Setname","useState","Email","Setemail","Message","Setmessage","SetHomeLoading","useContext","HomeLoadingContext","_jsx","children","className","_jsxs","style","boxShadow","onSubmit","async","e","preventDefault","setTimeout","toast","success","error","FcInvite","type","name","maxLength","value","onChange","target","required","role","Contact","homeloading","Layout","Spinners","animationData","SendingMessage","height","src"],"sourceRoot":""}